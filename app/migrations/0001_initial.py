# Generated by Django 4.1.7 on 2023-03-28 14:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("sur_name", models.CharField(max_length=155, verbose_name="Отчество")),
                (
                    "role",
                    models.CharField(
                        choices=[("CA", "cadet"), ("IN", "instructor"), ("OP", "oper")],
                        max_length=10,
                        verbose_name="Права",
                    ),
                ),
                (
                    "exam",
                    models.BooleanField(
                        help_text="0 - Не сдано, 1 - Сдано",
                        verbose_name="Практическое занятие",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь",
                "verbose_name_plural": "пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=255, verbose_name="Модель")),
                ("mark", models.CharField(max_length=255, verbose_name="Марка")),
            ],
            options={
                "verbose_name": "автомобиль",
                "verbose_name_plural": "автомобили",
            },
        ),
        migrations.CreateModel(
            name="Timetable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monday",
                    models.CharField(
                        blank=True,
                        max_length=155,
                        null=True,
                        verbose_name="Понедельник",
                    ),
                ),
                (
                    "tuesday",
                    models.CharField(
                        blank=True, max_length=155, null=True, verbose_name="Вторник"
                    ),
                ),
                (
                    "wednesday",
                    models.CharField(
                        blank=True, max_length=155, null=True, verbose_name="Среда"
                    ),
                ),
                (
                    "thursday",
                    models.CharField(
                        blank=True, max_length=155, null=True, verbose_name="Четверг"
                    ),
                ),
                (
                    "friday",
                    models.CharField(
                        blank=True, max_length=155, null=True, verbose_name="Пятница"
                    ),
                ),
                (
                    "saturday",
                    models.CharField(
                        blank=True, max_length=155, null=True, verbose_name="Суббота"
                    ),
                ),
                (
                    "sunday",
                    models.CharField(
                        blank=True,
                        max_length=155,
                        null=True,
                        verbose_name="Воскресенье",
                    ),
                ),
            ],
            options={
                "verbose_name": "расписание",
                "verbose_name_plural": "расписания",
            },
        ),
        migrations.CreateModel(
            name="TrainingGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=255, verbose_name="Название")),
            ],
            options={
                "verbose_name": "группа",
                "verbose_name_plural": "группы",
            },
        ),
        migrations.CreateModel(
            name="PracticalLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("practic_time", models.DateTimeField(verbose_name="Время")),
                (
                    "cadet_id",
                    models.ForeignKey(
                        limit_choices_to={"role": "cadet"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Instructor",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Идентификатор курсанта",
                    ),
                ),
                (
                    "car_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.car",
                        verbose_name="Идентификатор автомобиля",
                    ),
                ),
                (
                    "instuctor_id",
                    models.ForeignKey(
                        limit_choices_to={"role": "instructor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Cadet",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Идентификатор инструктора",
                    ),
                ),
            ],
            options={
                "verbose_name": "практика",
                "verbose_name_plural": "практики",
            },
        ),
        migrations.CreateModel(
            name="Agreement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.IntegerField(unique=True, verbose_name="Номер договора"),
                ),
                (
                    "training_category",
                    models.CharField(
                        choices=[
                            ("M", "Мопед"),
                            ("A", "Мотоцикл"),
                            ("B", "Легковой автомобиль"),
                            ("BE", "Легковой автомобиль с прицепом"),
                            ("C", "Грузовик"),
                            ("CE", "Грузовик с прицепом"),
                            ("D", "Автобус"),
                            ("DE", "Автобус с прицепом"),
                            ("TM", "Трамвай"),
                            ("TB", "Троллейбус"),
                        ],
                        max_length=30,
                        verbose_name="Категория прав обучение",
                    ),
                ),
                (
                    "start_date_training",
                    models.DateField(verbose_name="Дата начала обучения"),
                ),
                (
                    "end_date_training",
                    models.DateField(verbose_name="Дата окончания обучения"),
                ),
                (
                    "payment_confirm",
                    models.BooleanField(
                        help_text="0 - Не оплачено, 1 - Оплачено",
                        verbose_name="Статус оплаты",
                    ),
                ),
                (
                    "group_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.traininggroup",
                        verbose_name="Учебная группа",
                    ),
                ),
            ],
            options={
                "verbose_name": "договор",
                "verbose_name_plural": "договора",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="agreement_id",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.agreement",
                verbose_name="Идентификатор договора",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="timetable_id",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.timetable",
                verbose_name="Идентификатор расписания практических занятий",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
